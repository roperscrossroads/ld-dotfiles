---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  vars:
#    flyctl_version: "0.1.130"
    pulumi_version: "v3.137.0"

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install packages
      ansible.builtin.package:
        name:
          - autoconf
          - curl
          - fd-find
          - flatpak
          - gpg
          - gh
          - gcc
          - git
          - htop
          - inotify-tools
          - make
          - patch
          - podman-compose
          - tmux
          - unzip
          - vim
          - wget
          - wl-clipboard
          - zsh
        state: present

#    - name: Change shell to zsh
#      ansible.builtin.user:
#        name: "{{ remote_regular_user }}"
#        shell: /usr/bin/zsh

    - name: Install DNF plugins core (only for Fedora)
      ansible.builtin.dnf:
        name: dnf-plugins-core
        state: present
      when: ansible_os_family == "RedHat"

    # - name: Add Brave Browser Repo on Debian/Ubuntu
    #   ansible.builtin.apt_repository:
    #     repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
    #     state: present
    #     filename: 'brave-browser-release'
    #   when: ansible_os_family == "Debian"
    
    # - name: Import Brave Browser GPG Key on Debian/Ubuntu
    #   ansible.builtin.apt_repository:
    #     repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
    #     state: present
    #     filename: 'brave-browser-release'
    #     key: https://brave-browser-apt-release.s3.brave.com/brave-core.asc
    #   when: ansible_os_family == "Debian"
    
    # - name: Install Brave Browser on Debian/Ubuntu
    #   ansible.builtin.apt:
    #     name: brave-browser
    #     state: present
    #   when: ansible_os_family == "Debian"

    # - name: Add Brave Browser Repo on Fedora
    #   ansible.builtin.yum_repository:
    #     name: brave-browser
    #     description: Brave Browser
    #     baseurl: https://brave-browser-rpm-release.s3.brave.com/x86_64/
    #     gpgkey: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
    #     gpgcheck: true
    #     enabled: true
    #   when: ansible_os_family == "RedHat"

    # - name: Import Brave Browser GPG Key on Fedora
    #   ansible.builtin.rpm_key:
    #     key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
    #     state: present
    #   when: ansible_os_family == "RedHat"

    # - name: Install Brave Browser on Fedora
    #   ansible.builtin.dnf:
    #     name: brave-browser
    #     state: present
    #   when: ansible_os_family == "RedHat"

    - name: Import Microsoft GPG Key on Debian/Ubuntu
      ansible.builtin.apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Visual Studio Code Repo on Debian/Ubuntu
      ansible.builtin.apt_repository:
        repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/code stable main'
        state: present
        filename: 'vscode'
      when: ansible_os_family == "Debian"

    - name: Install VS Code on Debian/Ubuntu
      ansible.builtin.apt:
        name: code
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Visual Studio Code Repo on Fedora
      ansible.builtin.yum_repository:
        name: vscode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        gpgcheck: true
        enabled: true
      when: ansible_os_family == "RedHat"

    - name: Install VS Code on Fedora
      ansible.builtin.dnf:
        name: code
        state: present
      when: ansible_os_family == "RedHat"

    # TODO: fix urls for ubuntu / debian...

    # - name: Determine the correct Docker repository URL
    #   set_fact:
    #     docker_repo: >
    #       {% if ansible_distribution | lower == "ubuntu" %}
    #         https://download.docker.com/linux/ubuntu/dists/{{ ansible_distribution_release | lower }}/stable/
    #       {% elif ansible_distribution | lower == "debian" %}
    #         https://download.docker.com/linux/debian/dists/{{ ansible_distribution_release | lower }}/stable/
    #       {% else %}
    #         ""
    #       {% endif %}
    #   when: ansible_os_family in ["Debian", "Ubuntu"]

    # - name: Debug the Docker repository URL
    #   debug:
    #     msg: "Docker repository URL: {{ docker_repo }}"

    # - name: Add Docker repo on Debian/Ubuntu
    #   ansible.builtin.apt_repository:
    #     repo: "{{ docker_repo }}"
    #     state: present
    #     filename: 'docker'
    #   when: docker_repo != "" and ansible_os_family in ["Debian", "Ubuntu"]

    # - name: Install Docker on Debian/Ubuntu
    #   ansible.builtin.apt:
    #     name:
    #       - docker-ce
    #       - docker-ce-cli
    #       - containerd.io
    #       - docker-compose-plugin
    #     state: present
    #   when: docker_repo != "" and ansible_os_family in ["Debian", "Ubuntu"]

    - name: Add Docker repo on Fedora
      ansible.builtin.yum_repository:
        name: docker
        description: Docker repo
        baseurl: "https://download.docker.com/linux/fedora/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/stable"
        gpgkey: "https://download.docker.com/linux/fedora/gpg"
        gpgcheck: true
        enabled: true
      when: ansible_os_family == "RedHat"

    - name: Install Docker on Fedora
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
      when: ansible_os_family == "RedHat"

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        groups: docker
        append: true

    - name: Add mise config manager on Fedora
      ansible.builtin.command: >
        dnf config-manager --add-repo https://mise.jdx.dev/rpm/mise.repo
      when: ansible_os_family == "RedHat"
      register: add_repo
      ignore_errors: true

    - name: Install mise on Fedora
      ansible.builtin.dnf:
        name: mise
        state: present
      when: add_repo is succeeded and ansible_os_family == "RedHat"

    - name: Create keyrings directory
      ansible.builtin.file:
            path: /etc/apt/keyrings
            state: directory
            mode: '0755'
      become: true    
    
    - name: Download and add GPG key
      ansible.builtin.shell: >
            wget -qO - https://mise.jdx.dev/gpg-key.pub | gpg --dearmor | tee /etc/apt/keyrings/mise-archive-keyring.gpg
      become: true
      when: ansible_os_family in ["Debian", "Ubuntu"]

    - name: Add mise repository to sources list
      ansible.builtin.apt_repository:
            repo: 'deb [signed-by=/etc/apt/keyrings/mise-archive-keyring.gpg arch=amd64] https://mise.jdx.dev/deb stable main'
            state: present
      become: true
      when: ansible_os_family in ["Debian", "Ubuntu"]

    - name: Update package index
      ansible.builtin.apt:
            update_cache: yes
      become: true
      when: ansible_os_family in ["Debian", "Ubuntu"]

    - name: Install mise
      ansible.builtin.apt:
            name: mise
            state: present
      become: true
      when: ansible_os_family in ["Debian", "Ubuntu"]

    - name: Download and add Kubernetes GPG key
      ansible.builtin.shell: >
            curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      become: true
      when: ansible_os_family in ["Debian", "Ubuntu"]

    - name: Add kubectl repo on Debian/Ubuntu
      ansible.builtin.apt_repository:
            repo: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg arch=amd64] https://pkgs.k8s.io/core:/stable:/v1.30/deb stable main'
            state: present
      become: true
      when: ansible_os_family in ["Debian", "Ubuntu"]

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      become: true
      when: ansible_os_family in ["Debian", "Ubuntu"]

    - name: Install kubectl on Debian/Ubuntu
      ansible.builtin.apt:
        name: kubectl
        state: present
      when: ansible_os_family in ["Debian", "Ubuntu"]

    - name: Add kubectl repo on Fedora
      ansible.builtin.yum_repository:
        name: Kubernetes
        description: Kubernetes repo
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
        gpgcheck: true
        enabled: true
      when: ansible_os_family == "RedHat"

    - name: Install kubectl on Fedora
      ansible.builtin.dnf:
        name: kubectl
        state: present
      when: ansible_os_family == "RedHat"

    - name: Add Hashicorp Repo on Debian/Ubuntu
      ansible.builtin.apt_repository:
        repo: 'deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main'
        state: present
        filename: 'hashicorp'
      when: ansible_os_family == "Debian"

    - name: Install Terraform on Debian/Ubuntu
      ansible.builtin.apt:
        name: terraform
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Hashicorp Repo on Fedora
      ansible.builtin.yum_repository:
        name: hashicorp
        description: Hashicorp repo
        baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
        gpgkey: https://rpm.releases.hashicorp.com/gpg
        gpgcheck: true
        enabled: true
      when: ansible_os_family == "RedHat"

    - name: Install Terraform on Fedora
      ansible.builtin.dnf:
        name: terraform
        state: present
      when: ansible_os_family == "RedHat"

    - name: Check if Pulumi is installed
      ansible.builtin.command:
        cmd: pulumi version
      register: pulumi_installed
      ignore_errors: true
      changed_when: false

    - name: Download Pulumi SDK
      ansible.builtin.get_url:
        url: "https://get.pulumi.com/releases/sdk/pulumi-{{ pulumi_version }}-linux-x64.tar.gz"
        dest: "/tmp/pulumi-{{ pulumi_version }}-linux-x64.tar.gz"
        mode: "0644"
      when: pulumi_installed is failed or pulumi_installed.stdout is not search(pulumi_version)

    - name: Extract Pulumi to /usr/local/bin
      ansible.builtin.unarchive:
        src: "/tmp/pulumi-{{ pulumi_version }}-linux-x64.tar.gz"
        dest: /usr/local/bin
        extra_opts: [--strip-components=1]
        creates: /usr/local/bin/pulumi
      when: pulumi_installed is failed or pulumi_installed.stdout is not search(pulumi_version)

    - name: Add Flathub remote
      community.general.flatpak_remote:
        name: flathub
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
        state: present

    - name: Install Flatpak packages
      community.general.flatpak:
        name:
          - org.videolan.VLC
          - org.gnome.meld
          - org.sqlitebrowser.sqlitebrowser
        state: present

    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if Jetbrains Mono exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.fonts/JetBrainsMonoNerd*FontMono*"
      register: jetbrains_mono_exists
      ignore_errors: true
      changed_when: false

    - name: Download Jetbrains mono
      when: jetbrains_mono_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
        dest: "~{{ remote_regular_user }}/.fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"
